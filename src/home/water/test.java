/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package home.water;

/**
 *
 * @author kamau
 */

import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;
//import org.jfree.ui.Spacer;
import org.jfree.data.general.DefaultPieDataset;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
public class test extends javax.swing.JFrame {
Connection conn = null;
ResultSet rs = null;
PreparedStatement pst = null;
String N = "";
String S = "--Select One--";

    /**
     * Creates new form test
     */
    public test() {
        initComponents();
    }
public void calc(){
    Object obj = cbobasis.getSelectedItem();
    String A = obj.toString();
    txt21.setText(Integer.toString(Integer.parseInt(A)));
    txtno.setText(Integer.toString(Integer.parseInt(txtno.getText())*100));
txtcalc.setText(Integer.toString(Integer.parseInt(txtno.getText())/ Integer.parseInt(txt21.getText())*100));
        String str = txtcalc.getText();
        int j = Integer.valueOf(str);
        jProgressBar2.setValue(j);
        cmdChart.setEnabled(true);
        jLabel5.setVisible(true);
}
public void get(){
   Object obj= cbobasis.getSelectedItem(); 
   String g = obj.toString();
   if(g.equals(S)){
   JOptionPane.showMessageDialog(null, "Please Select a Valid Option");
   cmdChart.setEnabled(false);
   }else{
   int b = Integer.valueOf(g);
     for (int i = b; i >= 1; i--) {
         String A = String.valueOf(i);
         txtno.setText(A);
String sql = "SELECT `tenantname`, `month`, `year`, `units` FROM `monthlywater` WHERE `houseno` =  '"+txthouse.getText()+"' and `monthN`= '"+A+"' and `year` = '2015'";
try{
pst = conn.prepareStatement(sql);
 rs = pst.executeQuery();
 while(rs.next())
 { 
 if(i==1){
 txt1.setText(rs.getString("units"));
 month1.setText(rs.getString("month"));
 }else{
 if(i==2){
 txt2.setText(rs.getString("units"));
 month2.setText(rs.getString("month"));
 }else{
 if(i==3){
 txt3.setText(rs.getString("units"));
 month3.setText(rs.getString("month"));
 }else{
 if(i==4){
 txt4.setText(rs.getString("units"));
 month4.setText(rs.getString("month"));
 }else{
 if(i==5){
 txt5.setText(rs.getString("units"));
 month5.setText(rs.getString("month"));
 }else{
 if(i==6){
 txt6.setText(rs.getString("units"));
 month6.setText(rs.getString("month"));
 }else{
 if(i==7){
 txt7.setText(rs.getString("units"));
 month7.setText(rs.getString("month"));
 }else{
 if(i==8){
 txt8.setText(rs.getString("units"));
 month8.setText(rs.getString("month"));
 }else{
 if(i==9){
 txt9.setText(rs.getString("units"));
 month9.setText(rs.getString("month"));
 }else{
 if(i==10){
 txt10.setText(rs.getString("units"));
 month10.setText(rs.getString("month"));
 }else{
 if(i==11){
  txt11.setText(rs.getString("units"));
 month11.setText(rs.getString("month"));
 }else{
 if(i==12){
 txt12.setText(rs.getString("units"));
 month12.setText(rs.getString("month"));
 }else{}
 }
 }
 }
 }
 }
 }
 }
 }
 }
 }
 }
 }   
}catch(Exception e){
JOptionPane.showMessageDialog(null, e);
}calc();
}
   } 
}
public void use(){
String sql = "Select houseno from monthlywater where `houseno` = '"+txthouse.getText()+"'";
try{
    pst = conn.prepareStatement(sql);
    rs = pst.executeQuery();
    while(rs.next()){
    txtget.setText(rs.getString("houseno"));
    if(txtget.getText().equals(N)){
    JOptionPane.showMessageDialog(null, "No Record Found");
    cbobasis.setEnabled(false);
    }else{cbobasis.setEnabled(true);}
    }
}catch(Exception e){
JOptionPane.showMessageDialog(null, e);
}
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdChart = new javax.swing.JButton();
        txtno = new javax.swing.JTextField();
        txtno1 = new javax.swing.JTextField();
        txt1 = new javax.swing.JTextField();
        txt2 = new javax.swing.JTextField();
        txt3 = new javax.swing.JTextField();
        month1 = new javax.swing.JTextField();
        month2 = new javax.swing.JTextField();
        month3 = new javax.swing.JTextField();
        txt4 = new javax.swing.JTextField();
        month4 = new javax.swing.JTextField();
        txt5 = new javax.swing.JTextField();
        month5 = new javax.swing.JTextField();
        month6 = new javax.swing.JTextField();
        txt6 = new javax.swing.JTextField();
        month7 = new javax.swing.JTextField();
        month8 = new javax.swing.JTextField();
        month9 = new javax.swing.JTextField();
        month10 = new javax.swing.JTextField();
        month11 = new javax.swing.JTextField();
        month12 = new javax.swing.JTextField();
        txt7 = new javax.swing.JTextField();
        txt8 = new javax.swing.JTextField();
        txt9 = new javax.swing.JTextField();
        txt10 = new javax.swing.JTextField();
        txt11 = new javax.swing.JTextField();
        txt12 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        charts = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txthouse = new javax.swing.JTextField();
        cbobasis = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmdsearch = new javax.swing.JButton();
        txtget = new javax.swing.JTextField();
        cmdClose = new javax.swing.JButton();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        txtcalc = new javax.swing.JTextField();
        txt21 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cmdChart.setText("chart");
        cmdChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdChartActionPerformed(evt);
            }
        });

        txtno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtno1ActionPerformed(evt);
            }
        });

        month6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                month6ActionPerformed(evt);
            }
        });

        txt12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt12ActionPerformed(evt);
            }
        });

        charts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(charts);

        jLabel3.setText("Individual Charts");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setText("House Number");

        cbobasis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select One--", "3", "6", "9", "12" }));
        cbobasis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbobasisMouseClicked(evt);
            }
        });
        cbobasis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbobasisActionPerformed(evt);
            }
        });

        jLabel2.setText("Months");

        jLabel1.setText("basis");

        cmdsearch.setText("Search");
        cmdsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txthouse, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdsearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbobasis, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cbobasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(cmdsearch))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txthouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        cmdClose.setText("Close");
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        jProgressBar2.setStringPainted(true);

        jLabel5.setText("Extracted....");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(month11)
                            .addComponent(month12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt10)
                            .addComponent(month10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(month9)
                            .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt8)
                            .addComponent(month7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(month8)
                            .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt4)
                            .addComponent(txt5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(month4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(month6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(month5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(month3)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(month2)))
                                .addGap(18, 18, 18)
                                .addComponent(txtget, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtno, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(cmdChart, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmdClose)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(month1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtno1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(198, 198, 198)
                                .addComponent(txtcalc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {month1, month2, month3, month4, month5, month6, txt1, txt2, txt3, txt4, txt5, txt6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt21, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtcalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(month11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdChart)
                            .addComponent(cmdClose)
                            .addComponent(txtno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdChartActionPerformed
        // TODO add your handling code here:
           Object obj= cbobasis.getSelectedItem(); 
   String g = obj.toString();
    int z = Integer.valueOf(g);
    if(z==3){
        String a = txt1.getText();
        String b = txt2.getText();
        String c = txt3.getText();
        String montha= month1.getText();
        String monthb= month2.getText();
        String monthc= month3.getText();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(new Integer(a), new String(a), new String(montha));
        dataset.setValue(new Integer(b), "", new String(monthb));
        dataset.setValue(new Integer(c), "", new String(monthc));
        JFreeChart chart = ChartFactory.createBarChart("Water Usage", "Month", "Units", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame  = new ChartFrame("Bar Chart",chart);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
        frame.setSize(450, 350);
    }else{
    if(z==6){
        String a = txt1.getText();
        String b = txt2.getText();
        String c = txt3.getText();
        String d = txt4.getText();
        String e = txt5.getText();
        String f = txt6.getText();
        String montha= month1.getText();
        String monthb= month2.getText();
        String monthc= month3.getText();
        String monthd= month4.getText();
        String monthe= month5.getText();
        String monthf= month6.getText();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(new Integer(a), new String(a), new String(montha));
        dataset.setValue(new Integer(b), "", new String(monthb));
        dataset.setValue(new Integer(c), "", new String(monthc));
        dataset.setValue(new Integer(d), "", new String(monthd));
        dataset.setValue(new Integer(e), "", new String(monthe));
        dataset.setValue(new Integer(f), "", new String(monthf));
        JFreeChart chart = ChartFactory.createBarChart("Water Usage", "Month", "Units", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame  = new ChartFrame("Bar Chart",chart);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
        frame.setSize(750, 450);
    }else{
    if(z==9){
        String a = txt1.getText();
        String b = txt2.getText();
        String c = txt3.getText();
        String d = txt4.getText();
        String e = txt5.getText();
        String f = txt6.getText();
        String g1 = txt7.getText();
        String h = txt8.getText();
        String i = txt9.getText();
        String montha= month1.getText();
        String monthb= month2.getText();
        String monthc= month3.getText();
        String monthd= month4.getText();
        String monthe= month5.getText();
        String monthf= month6.getText();
        String monthg= month7.getText();
        String monthh= month8.getText();
        String monthi= month9.getText();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(new Integer(a), new String(a), new String(montha));
        dataset.setValue(new Integer(b), "", new String(monthb));
        dataset.setValue(new Integer(c), "", new String(monthc));
        dataset.setValue(new Integer(d), "", new String(monthd));
        dataset.setValue(new Integer(e), "", new String(monthe));
        dataset.setValue(new Integer(f), "", new String(monthf));
        dataset.setValue(new Integer(g1), "", new String(monthg));
        dataset.setValue(new Integer(h), "", new String(monthh));
        dataset.setValue(new Integer(i), "", new String(monthi));
        JFreeChart chart = ChartFactory.createBarChart("Water Usage", "Month", "Units", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame  = new ChartFrame("Bar Chart",chart);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
        frame.setSize(800, 500);
    }else{
    if(z==12){
        String a = txt1.getText();
        String b = txt2.getText();
        String c = txt3.getText();
        String d = txt4.getText();
        String e = txt5.getText();
        String f = txt6.getText();
        String g1 = txt7.getText();
        String h = txt8.getText();
        String i = txt9.getText();
        String j = txt10.getText();
        String k = txt11.getText();
        String l = txt12.getText();
        String montha= month1.getText();
        String monthb= month2.getText();
        String monthc= month3.getText();
        String monthd= month4.getText();
        String monthe= month5.getText();
        String monthf= month6.getText();
        String monthg= month7.getText();
        String monthh= month8.getText();
        String monthi= month9.getText();
        String monthj= month10.getText();
        String monthk= month11.getText();
        String monthl= month12.getText();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(new Integer(a), new String(a), new String(montha));
        dataset.setValue(new Integer(b), "", new String(monthb));
        dataset.setValue(new Integer(c), "", new String(monthc));
        dataset.setValue(new Integer(d), "", new String(monthd));
        dataset.setValue(new Integer(e), "", new String(monthe));
        dataset.setValue(new Integer(f), "", new String(monthf));
        dataset.setValue(new Integer(g1), "", new String(monthg));
        dataset.setValue(new Integer(h), "", new String(monthh));
        dataset.setValue(new Integer(i), "", new String(monthi));
        dataset.setValue(new Integer(j), "", new String(monthj));
        dataset.setValue(new Integer(k), "", new String(monthk));
        dataset.setValue(new Integer(l), "", new String(monthl));
        JFreeChart chart = ChartFactory.createBarChart("Water Usage", "Month", "Units", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame  = new ChartFrame("Bar Chart",chart);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);
        frame.setSize(1000, 700);
    }else{}
    }
    }
    }
    }//GEN-LAST:event_cmdChartActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        conn = connectDB.ConnectDB();
        jLabel5.setVisible(false);
        txtcalc.setVisible(false);
        txt21.setVisible(false);
        cmdChart.setEnabled(false);
        txtget.setVisible(false);
        txtno.setVisible(false);
        txtno1.setVisible(false);
        txt1.setVisible(false);
        txt2.setVisible(false);
        txt3.setVisible(false);
        txt4.setVisible(false);
        txt5.setVisible(false);
        txt6.setVisible(false);
        txt7.setVisible(false);
        txt8.setVisible(false);
        txt9.setVisible(false);
        txt10.setVisible(false);
        txt11.setVisible(false);
        txt12.setVisible(false);
        month1.setVisible(false);
        month2.setVisible(false);
        month3.setVisible(false);
        month4.setVisible(false);
        month5.setVisible(false);
        month6.setVisible(false);
        month7.setVisible(false);  
        month8.setVisible(false);
        month9.setVisible(false);  
        month10.setVisible(false);  
        month11.setVisible(false); 
        month12.setVisible(false);
        cbobasis.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void cbobasisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbobasisMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbobasisMouseClicked

    private void txt12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt12ActionPerformed

    private void month6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_month6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_month6ActionPerformed

    private void txtno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtno1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtno1ActionPerformed

    private void cmdsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsearchActionPerformed
        // TODO add your handling code here:
String sql = "Select block, houseno, meterno, tenantname, month, year, reading, units, rate, amount from monthlywater where `houseno` = '"+txthouse.getText()+"' and `year` = '2015'";
try{
    pst = conn.prepareStatement(sql);
    rs = pst.executeQuery();
    charts.setModel(DbUtils.resultSetToTableModel(rs)); 
     use();
}catch(Exception e){
JOptionPane.showMessageDialog(null, e);
}
    }//GEN-LAST:event_cmdsearchActionPerformed

    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cmdCloseActionPerformed

    private void cbobasisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbobasisActionPerformed
        // TODO add your handling code here:
        get();
    }//GEN-LAST:event_cbobasisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbobasis;
    private javax.swing.JTable charts;
    private javax.swing.JButton cmdChart;
    private javax.swing.JButton cmdClose;
    private javax.swing.JButton cmdsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField month1;
    private javax.swing.JTextField month10;
    private javax.swing.JTextField month11;
    private javax.swing.JTextField month12;
    private javax.swing.JTextField month2;
    private javax.swing.JTextField month3;
    private javax.swing.JTextField month4;
    private javax.swing.JTextField month5;
    private javax.swing.JTextField month6;
    private javax.swing.JTextField month7;
    private javax.swing.JTextField month8;
    private javax.swing.JTextField month9;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt10;
    private javax.swing.JTextField txt11;
    private javax.swing.JTextField txt12;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt21;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    private javax.swing.JTextField txt6;
    private javax.swing.JTextField txt7;
    private javax.swing.JTextField txt8;
    private javax.swing.JTextField txt9;
    private javax.swing.JTextField txtcalc;
    private javax.swing.JTextField txtget;
    private javax.swing.JTextField txthouse;
    private javax.swing.JTextField txtno;
    private javax.swing.JTextField txtno1;
    // End of variables declaration//GEN-END:variables
}
